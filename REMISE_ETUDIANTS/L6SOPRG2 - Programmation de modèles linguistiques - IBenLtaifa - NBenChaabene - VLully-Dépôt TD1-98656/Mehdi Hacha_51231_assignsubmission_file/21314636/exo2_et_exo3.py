# -*- coding: utf-8 -*-
"""EXO2 et EXO3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1k5vc_IpikVTYVvUIKuWh-A2TrtUfccam
"""

from sklearn.naive_bayes import MultinomialNB
from sklearn.ensemble import AdaBoostClassifier
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn. feature_extraction.text import CountVectorizer
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from wordcloud import WordCloud

df = pd.read_csv('/content/sample_data/spam.csv', encoding='ISO 8859 1')

df

df = df.drop(df.columns[[2, 3, 4]], axis=1)

df

df = df.rename(columns={'v1' : 'labels', 'v2' : 'data'})
df

one_zero = {"ham":0, "spam":1}
df['b_labels'] = df['labels'].map(one_zero)
df

df_train, df_test, Y_train, Y_test = train_test_split(df.data, df.b_labels, test_size=0.30)
tfidf = TfidfVectorizer(decode_error ='ignore')
X_train = tfidf. fit_transform (df_train)
X_test = tfidf. transform (df_test)

model = MultinomialNB()
model.fit(X_train, Y_train)

precision = model.score(X_train, Y_train)
print("Pr√©cision pour NB", precision)

clf = AdaBoostClassifier(n_estimators=100, algorithm="SAMME", random_state=0)

clf.fit(X_train, Y_train)

clf.score(X_test, Y_test)

def visualize(label):
  words = " "
  for msg in df[df['labels'] == label]['data']:
    msg = msg.lower()
    words += msg + ''
    wordcloud = WordCloud(width = 600, height = 400).generate(words)
  plt.imshow(wordcloud)
  plt.axis('off')
  plt.show()

visualize("ham")