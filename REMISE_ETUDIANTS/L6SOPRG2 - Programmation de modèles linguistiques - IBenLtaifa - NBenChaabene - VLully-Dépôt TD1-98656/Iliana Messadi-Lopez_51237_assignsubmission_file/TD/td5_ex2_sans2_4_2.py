{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":7915327,"sourceType":"datasetVersion","datasetId":4650818}],"dockerImageVersionId":30673,"isInternetEnabled":false,"language":"python","sourceType":"script","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-03-26T00:50:19.172297Z\",\"iopub.execute_input\":\"2024-03-26T00:50:19.173328Z\",\"iopub.status.idle\":\"2024-03-26T00:50:19.178350Z\",\"shell.execute_reply.started\":\"2024-03-26T00:50:19.173283Z\",\"shell.execute_reply\":\"2024-03-26T00:50:19.177016Z\"}}\nimport numpy as np\nimport pandas as pd\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.naive_bayes import MultinomialNB\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-03-26T00:50:19.180595Z\",\"iopub.execute_input\":\"2024-03-26T00:50:19.181106Z\",\"iopub.status.idle\":\"2024-03-26T00:50:19.216529Z\",\"shell.execute_reply.started\":\"2024-03-26T00:50:19.181064Z\",\"shell.execute_reply\":\"2024-03-26T00:50:19.215571Z\"}}\ndf = pd.read_csv(\"/kaggle/input/spamcsv/spam.csv\", encoding=\"iso-8859-1\")\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-03-26T00:50:19.217726Z\",\"iopub.execute_input\":\"2024-03-26T00:50:19.218192Z\",\"iopub.status.idle\":\"2024-03-26T00:50:19.229962Z\",\"shell.execute_reply.started\":\"2024-03-26T00:50:19.218165Z\",\"shell.execute_reply\":\"2024-03-26T00:50:19.228819Z\"}}\nndf = df.drop([\"Unnamed: 2\", \"Unnamed: 3\", \"Unnamed: 4\"], axis=1)\nndf\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-03-26T00:50:19.231815Z\",\"iopub.execute_input\":\"2024-03-26T00:50:19.232546Z\",\"iopub.status.idle\":\"2024-03-26T00:50:19.244066Z\",\"shell.execute_reply.started\":\"2024-03-26T00:50:19.232516Z\",\"shell.execute_reply\":\"2024-03-26T00:50:19.243004Z\"}}\nndf.rename(columns={\"v1\" : \"labels\", \"v2\" : \"data\"}, inplace=True)\nndf\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-03-26T00:50:19.245194Z\",\"iopub.execute_input\":\"2024-03-26T00:50:19.245528Z\",\"iopub.status.idle\":\"2024-03-26T00:50:19.264365Z\",\"shell.execute_reply.started\":\"2024-03-26T00:50:19.245501Z\",\"shell.execute_reply\":\"2024-03-26T00:50:19.263542Z\"}}\nndf.insert(1,\"b_labels\",[labels+\": 0\" if labels == \"ham\" else labels+\": 1\" for labels in ndf[\"labels\"]])\nndf\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-03-26T00:50:19.265337Z\",\"iopub.execute_input\":\"2024-03-26T00:50:19.266141Z\",\"iopub.status.idle\":\"2024-03-26T00:50:19.275427Z\",\"shell.execute_reply.started\":\"2024-03-26T00:50:19.266111Z\",\"shell.execute_reply\":\"2024-03-26T00:50:19.274412Z\"}}\ntrain,test = train_test_split(ndf,test_size=0.30)\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-03-26T00:50:19.276716Z\",\"iopub.execute_input\":\"2024-03-26T00:50:19.277018Z\",\"iopub.status.idle\":\"2024-03-26T00:50:19.288572Z\",\"shell.execute_reply.started\":\"2024-03-26T00:50:19.276993Z\",\"shell.execute_reply\":\"2024-03-26T00:50:19.287422Z\"}}\n#2.4.1.\n#tfidf = TfidfVectorizer ( decode_error =’ignore’) #ça crée une matrice avec des documents(chaque élément de la matrice est un document) en ignorant les possibles différence d'encoding\n#Xtrain = tfidf. fit_transform (df_train) #ça calcule la ressembleance entre les éléments de la matrice et retourne ces valeurs dans un format utilisable pour les modèles (dans ce cas c'est sur les documents préparés dans la ligne précédente)\n#Xtest = tfidf. transform (df_test) #ça prépare dans le format correcte pour les modèles le contenu de la matrice tfidf (sans calculer la ressembleance)\n\n# %% [code]\n","metadata":{"_uuid":"2b78bad7-24e3-4bdc-b7c1-736c05b58c5c","_cell_guid":"e5f48707-3856-42a5-b7b7-bc3c719755aa","collapsed":false,"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]}]}